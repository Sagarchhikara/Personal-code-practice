import argparse

import vertexai
from vertexai.preview.vision_models import ImageGenerationModel
from vertexai.generative_models import (
    GenerativeModel,
    Part,
)
def generate_bouquet_image(
    project_id: str, location:str , output_file: str, prompt:str
) -> vertexai.preview.vision_models.ImageGenerationResponse:
    """Generate an image using a text prompt.
    Args:
      project_id: Google Cloud project ID, used to initialize Vertex AI.
      location: Google Cloud region, used to initialize Vertex AI.
      output_file: Local path to the output image file.
      prompt: The text prompt describing what you want to see."""

    vertexai.init(project=project_id, location=location)

    model = ImageGenerationModel.from_pretrained("imagen-3.0-generate-002")

    images = model.generate_images(
        prompt=prompt,
        # Optional parameters
        number_of_images=1,
        seed=1,
        add_watermark=False,
    )

    images[0].save(location=output_file)

    return images

generate_bouquet_image(
    project_id='qwiklabs-gcp-02-87228d504f5c',
    location='europe-west1',
    output_file='image.jpeg',
    prompt='Create an image containing a bouquet of 2 sunflowers and 3 roses',
    )
def analyze_bouquet_image(
    project_id: str, location:str, image_path:str 
) -> str:
    """Analyze a bouquet image and generate birthday wishes based on it.
    
    Args:
      project_id: Google Cloud project ID, used to initialize Vertex AI.
      location: Google Cloud region, used to initialize Vertex AI.
      image_path: Path to the local image file to analyze.
      
    Returns:
      Birthday wishes text generated based on the image analysis.
    """
    vertexai.init(project=project_id, location=location)
    
    # Load the image
    with open(image_path, "rb") as f:
        image_data = f.read()
    
    # Create a Part object for the image
    image_part = Part.from_data(data=image_data, mime_type="image/jpeg")
    
    # Create a prompt for generating birthday wishes based on the bouquet
    text_prompt = "This is a bouquet of flowers. Create heartfelt birthday wishes based on this bouquet. Describe the flowers seen in the image and incorporate them into the wishes."
    
    # Load the multimodal model
    model = GenerativeModel("gemini-2.0-flash-001")
    
    # Generate content based on the image and prompt
    response = model.generate_content(
        [text_prompt, image_part],
        generation_config={
            "max_output_tokens": 256,
            "temperature": 0.4,
        }
    )
    
    return response.text

analyze_bouquet_image(
    project_id='qwiklabs-gcp-02-87228d504f5c',
    location='europe-west1',
    image_path='/usr/bin/image.jpeg'
    )import argparse

import vertexai
from vertexai.preview.vision_models import ImageGenerationModel
from vertexai.generative_models import (
    GenerativeModel,
    Part,
)
def generate_bouquet_image(
    project_id: str, location:str , output_file: str, prompt:str
) -> vertexai.preview.vision_models.ImageGenerationResponse:
    """Generate an image using a text prompt.
    Args:
      project_id: Google Cloud project ID, used to initialize Vertex AI.
      location: Google Cloud region, used to initialize Vertex AI.
      output_file: Local path to the output image file.
      prompt: The text prompt describing what you want to see."""

    vertexai.init(project=project_id, location=location)

    model = ImageGenerationModel.from_pretrained("imagen-3.0-generate-002")

    images = model.generate_images(
        prompt=prompt,
        # Optional parameters
        number_of_images=1,
        seed=1,
        add_watermark=False,
    )

    images[0].save(location=output_file)

    return images

generate_bouquet_image(
    project_id='qwiklabs-gcp-03-af36b85eaba7',
    location='europe-west4',
    output_file='image.jpeg',
    prompt='Create an image containing a bouquet of 2 sunflowers and 3 roses',
    )
def analyze_bouquet_image(
    project_id: str, location:str, image_path:str 
) -> str:
    """Analyze a bouquet image and generate birthday wishes based on it.
    
    Args:
      project_id: Google Cloud project ID, used to initialize Vertex AI.
      location: Google Cloud region, used to initialize Vertex AI.
      image_path: Path to the local image file to analyze.
      
    Returns:
      Birthday wishes text generated based on the image analysis.
    """
    vertexai.init(project=project_id, location=location)
    
    # Load the image
    with open(image_path, "rb") as f:
        image_data = f.read()
    
    # Create a Part object for the image
    image_part = Part.from_data(data=image_data, mime_type="image/jpeg")
    
    # Create a prompt for generating birthday wishes based on the bouquet
    text_prompt = "This is a bouquet of flowers. Create heartfelt birthday wishes based on this bouquet. Describe the flowers seen in the image and incorporate them into the wishes."
    
    # Load the multimodal model
    model = GenerativeModel("gemini-2.0-flash-001")
    
    # Generate content based on the image and prompt
    response = model.generate_content(
        [text_prompt, image_part],
        generation_config={
            "max_output_tokens": 256,
            "temperature": 0.4,
        }
    )
    
    return response.text

analyze_bouquet_image(
    project_id='qwiklabs-gcp-03-af36b85eaba7',
    location='europe-west4',
    image_path='image.jpeg'
    )